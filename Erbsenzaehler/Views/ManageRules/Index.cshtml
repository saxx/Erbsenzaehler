@model Erbsenzaehler.ViewModels.Rules.IndexViewModel
<h2>Rules</h2>

@if (Model.ApplierResult != null)
{
    <div class="alert alert-success">
        @Model.ApplierResult.LinesUpdated.ToString("N0") @(Model.ApplierResult.LinesUpdated == 1 ? "line has" : "lines have") been updated.
    </div>
}
else
{
    <div class="alert alert-info">
        You can use rules to automatically categorize and "sanitize" your account statement lines. The text of each line is used to find matching rules.
    </div>
}

<div class="row">
    <div class="col-sm-3">
        @using (Html.BeginForm("Download", "ManageRules"))
        {
            @Html.AntiForgeryToken()
            <button type="submit" class="btn btn-default btn-block">Export rules</button>
        }
    </div>

    <div class="col-sm-1"></div>

    <div class="col-sm-4">
        @using (Html.BeginForm("Apply", "ManageRules"))
        {
            @Html.AntiForgeryToken()
            <button type="submit" class="btn btn-default btn-block">Reset and apply rules</button>
        }
    </div>

    <div class="col-sm-1"></div>

    <div class="col-sm-3">
        @Html.ActionLink("Import rules", "Upload", null, new { @class = "btn btn-default btn-block" })
    </div>
</div>



