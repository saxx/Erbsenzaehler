@using Newtonsoft.Json
@model Erbsenzaehler.ViewModels.HistoricalReports.IndexViewModel
@if (Model.Overview.Months.Any())
{
    <div id="chartContainer" style="max-width: 100%; height: 600px;"></div>

    <hr/>

    <table class="table table-striped">
        <tr>
            <th>Datum</th>
            <th>Saldo</th>
            <th>Einkommen</th>
            <th>Ausgaben</th>
            @foreach (var category in Model.Overview.CategoryHeaders.OrderByDescending(x => x))
            {
                <th>@category</th>
            }
        </tr>

        @foreach (var month in Model.Overview.Months)
        {
            <tr>
                <td>
                    <a href="@Url.Action("Index", "Today")?month=@(month.Year + "-" + month.Month.ToString().PadLeft(2, '0') )">@month.Name</a>
                </td>
                <td class="amount">@month.Balance.ToString("N2")</td>
                <td class="amount">@month.Income.ToString("N2")</td>
                <td class="amount">@month.Spent.ToString("N2")</td>
                @foreach (var category in Model.Overview.CategoryHeaders.OrderByDescending(x => x))
                {
                    <td class="amount">@(((decimal) month[category]).ToString("N2"))</td>
                }
            </tr>
        }
    </table>


@section scripts
{
    <script>
        var json = @Html.Raw(JsonConvert.SerializeObject(Model.Overview));


        $(function() {
            json.Months = json.Months.reverse();

            $.each(json.Months, function(i, month) {
                month.Spent = -month.Spent;
                @foreach (var category in Model.Overview.CategoryHeaders)
                {
                    <text>
                    month['@Html.Raw(category)'] = -month['@Html.Raw(category)'];
                    </text>
                }
            });


            $("#chartContainer").dxChart({
                title: {
                    text: 'Einkommen und Ausgaben im Monatsverlauf',
                    font: {
                        size: '1.25em'
                    }
                },
                dataSource: json.Months,
                palette: 'Soft Pastel',
                tooltip: {
                    enabled: true,
                    argumentFormat: 'currency',
                    customizeText: function() {
                        return this.argumentText + " - " + this.seriesName + ": " + this.valueText + " €";
                    }
                },
                commonSeriesSettings: {
                    type: 'stackedBar',
                    argumentField: 'Name'
                },
                series: [
                    @foreach (var category in Model.Overview.CategoryHeaders.OrderByDescending(x => x))
                    {
                        <text>
                                {
                                    name: '@Html.Raw(category)',
                                    valueField: '@Html.Raw(category)'
                                },
                                </text>
                    }
                    {
                        type: 'spline',
                        name: 'Income',
                        color: 'black',
                        point: { visible: false },
                        valueField: 'Income'
                    }
                ]
            });
        });
    </script>
}}
else
{
    @Html.Partial("_NoLinesWarning")
}