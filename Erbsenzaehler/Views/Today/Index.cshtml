@model Erbsenzaehler.ViewModels.Today.IndexViewModel

@{
    var currentMonth = Model.CurrentDate;

    var previousMonth = currentMonth.Date.AddMonths(-1);
    var nextMonth = currentMonth.Date.AddMonths(1);

    var showPager = Model.MinDate > DateTime.MinValue && Model.MaxDate > DateTime.MinValue;
}


@if (showPager)
{
    <div class="row">
        <div class="col-xs-4">
            <nav>
                <ul class="pager">
                    @if (Model.MinDate < previousMonth && Model.MinDate > DateTime.MinValue)
                    {
                        <li>
                            <a href="@Url.Action("Index")?month=@previousMonth.ToString("yyyy-MM")">
                                <span aria-hidden="true">&larr;</span> @previousMonth.ToString("MMMM yyyy")</a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
        <div class="col-xs-4">
            <h2 class="text-center">@currentMonth.ToString("MMMM yyyy")</h2>
            <h2 class="text-center colored-sum @(Model.Balance >= 0 ? "positive" : "negative")">@(Model.Balance > 0 ? "+" : "")@Model.Balance.ToString("N2") €</h2>
        </div>
        <div class="col-xs-4">
            <nav>
                <ul class="pager">
                    @if (Model.MaxDate >= nextMonth)
                    {
                        <li>
                            <a href="@Url.Action("Index")?month=@nextMonth.ToString("yyyy-MM")">
                                @nextMonth.ToString("MMMM yyyy") <span aria-hidden="true">&rarr;</span></a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    </div>

    <hr/>
}

@if (Model.HasLines)
{
    <div class="row">
        <div class="col-sm-4">
            @if (Model.HasBudgets)
            {
                <div id="budgetChart" style="width: 100%; height: 250px;"></div>
            }
            else
            {
                @Html.Partial("_NoBudgetsWarning")
            }
        </div>
        <div class="col-sm-4">
            <div id="balanceChart" style="width: 100%; height: 250px;"></div>
        </div>
        <div class="col-sm-4">
            <div id="spendingsChart" style="width: 100%; height: 250px;"></div>
        </div>
    </div>

    <hr/>

    <div class="row">
        <div class="col-sm-12">
            @Html.Action("Index", "LinesEditor")
        </div>
    </div>

@section scripts
{
    <script>
        $(document).ready(function() {
            function loadSpendingsChart() {
                $.getJSON('@Url.Action("SpendingsChart")?month=@currentMonth.ToString("yyyy-MM")', function(data) {
                    $('#spendingsChart').dxPieChart({
                        title: {
                            text: 'Ausgaben',
                            font: {
                                size: '1.25em'
                            }
                        },
                        dataSource: data,
                        palette: 'Soft Pastel',
                        legend: {
                            visible: true
                        },
                        tooltip: {
                            enabled: true,
                            argumentFormat: 'currency',
                            customizeText: function() {
                                return this.argumentText + ": " + this.valueText + " €";
                            }
                        },
                        series: {
                            valueField: 'amount',
                            argumentField: 'category'
                        }
                    });
                });
            }

            function loadBalanceChart() {
                $.getJSON('@Url.Action("BalanceChart")?month=@currentMonth.ToString("yyyy-MM")', function(data) {
                    $('#balanceChart').dxChart({
                        title: {
                            text: 'Einkommen vs. Ausgaben',
                            font: {
                                size: '1.25em'
                            }
                        },
                        dataSource: data,
                        legend: {
                            visible: false
                        },
                        valueAxis: {
                            visible: false,
                            grid: {
                                visible: false
                            },
                            label: {
                                visible: false
                            }
                        },
                        argumentAxis: {
                            visible: false,
                            grid: {
                                visible: false
                            },
                            label: {
                                visible: true
                            }
                        },
                        tooltip: {
                            enabled: true,
                            argumentFormat: 'currency',
                            customizeText: function() {
                                return this.argumentText + ": " + this.valueText + " €";
                            }
                        },
                        series: [
                            {
                                name: 'Income',
                                type: 'spline',
                                valueField: 'income',
                                argumentField: 'month',
                                color: '#78b6d9',
                                point: {
                                    visible: false
                                }
                            }, {
                                name: 'Spendings',
                                type: 'spline',
                                valueField: 'spendings',
                                argumentField: 'month',
                                color: '#a37182',
                                point: {
                                    visible: false
                                }
                            }
                        ]
                    });
                });
            }

            function loadBudgetChart() {
                $.getJSON('@Url.Action("BudgetChart")?month=@currentMonth.ToString("yyyy-MM")', function(data) {
                    var max = 100;
                    $.each(data, function(i, val) {
                        if (val.percentage >= 100) {
                            max = null;
                            return;
                        }
                    });


                    $('#budgetChart').dxChart({
                        title: {
                            text: 'Budgets',
                            font: {
                                size: '1.25em'
                            }
                        },
                        dataSource: data,
                        legend: {
                            visible: false
                        },
                        customizePoint: function() {
                            if (this.value > 100) {
                                return {
                                    color: '#a37182'
                                };
                            }
                            return {
                                color: '#90ba58'
                            };
                        },
                        tooltip: {
                            enabled: true,
                            argumentFormat: 'currency',
                            customizeText: function() {
                                return this.argumentText + ": " + this.valueText + " %";
                            }
                        },
                        valueAxis: {
                            visible: false,
                            grid: {
                                visible: false
                            },
                            max: max,
                            label: {
                                visible: false
                            },
                            constantLines: [
                                {
                                    label: {
                                        text: 'Limit'
                                    },
                                    width: 2,
                                    value: 100,
                                    color: '#000000',
                                    dashStyle: 'dash'
                                }
                            ]
                        },
                        series: [
                            {
                                type: 'bar',
                                valueField: 'percentage',
                                argumentField: 'category'
                            }
                        ]
                    });
                });
            }

            window.reloadCallback = function() {
                loadBudgetChart();
                loadBalanceChart();
                loadSpendingsChart();
            };
        });
    </script>
}}
else
{
    @Html.Partial("_NoLinesWarning")
}
