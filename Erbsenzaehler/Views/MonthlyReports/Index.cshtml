@model Erbsenzaehler.ViewModels.MonthlyReports.IndexViewModel

@{
    var currentMonth = Model.CurrentDate;

    var previousMonth = currentMonth.Date.AddMonths(-1);
    var nextMonth = currentMonth.Date.AddMonths(1);
}



<nav>
    <ul class="pager">
        @if (Model.MinDate < previousMonth)
            {
            <li><a href="@Url.Action("Index")?month=@previousMonth.ToString("yyyy-MM")">&laquo; @previousMonth.ToString("MMMM yyyy")</a></li>
        }
        <li><h2>@currentMonth.ToString("MMMM yyyy")</h2></li>
        @if (Model.MaxDate > nextMonth)
            {
            <li><a href="@Url.Action("Index")?month=@nextMonth.ToString("yyyy-MM")">@nextMonth.ToString("MMMM yyyy") &raquo;</a></li>
        }
    </ul>
</nav>

@if (Model.HasLines)
{
    <div class="row">
        <div class="col-sm-4">
            @if (Model.HasBudgets)
            {
                <div id="budgetChart" style="width: 100%; height: 250px;"></div>
            }
            else
            {
                <div class="alert alert-warning">
                    <p>
                        You don't have any budgets configured yet.
                        Use budgets to create and track spending limits for certain categories.
                    </p>
                    <p>
                        <a href="@Url.Action("Index", "ManageBudgets")" class="btn btn-default pull-right">Create budgets</a>
                    </p>
                    <p class="clearfix"></p>
                </div>
            }
        </div>
        <div class="col-sm-4">
            <div id="balanceChart" style="width: 100%; height: 250px;"></div>
        </div>
        <div class="col-sm-4">
            <div id="spendingsChart" style="width: 100%; height: 250px;"></div>
        </div>
    </div>

    <div class="row">
        <p></p>
    </div>
    <div class="row">
        <p></p>
    </div>

    <div class="row">
        <div class="col-sm-12">
            @Html.Action("Index", "LinesEditor")
        </div>
    </div>

    @section scripts
{
        <script>
            $(document).ready(function () {
                function loadSpendingsChart() {
                    $.getJSON('@Url.Action("SpendingsChart")?month=@currentMonth.ToString("yyyy-MM")', function (data) {
                        $('#spendingsChart').dxPieChart({
                            title: {
                                text: 'Spendings',
                                font: {
                                    size: '1.25em'
                                }
                            },
                            dataSource: data,
                            palette: 'Vintage',
                            legend: {
                                visible: true
                            },
                            tooltip: {
                                enabled: true,
                                argumentFormat: 'currency',
                                customizeText: function () {
                                    return this.argumentText + ": -" + this.valueText + " €";
                                }
                            },
                            series: {
                                valueField: 'amount',
                                argumentField: 'category'
                            }
                        });
                    });
                }

                function loadBalanceChart() {
                    $.getJSON('@Url.Action("BalanceChart")?month=@currentMonth.ToString("yyyy-MM")', function (data) {
                        $('#balanceChart').dxChart({
                            title: {
                                text: 'Income vs. Spendings',
                                font: {
                                    size: '1.25em'
                                }
                            },
                            dataSource: data,
                            legend: {
                                visible: false
                            },
                            valueAxis: {
                                visible: false,
                                grid: {
                                    visible: false
                                },
                                label: {
                                    visible: false
                                }
                            },
                            argumentAxis: {
                                visible: false,
                                grid: {
                                    visible: false
                                },
                                label: {
                                    visible: true
                                }
                            },
                            tooltip: {
                                enabled: true,
                                argumentFormat: 'currency',
                                customizeText: function () {
                                    return this.argumentText + ": " + this.valueText + " €";
                                }
                            },
                            series: [
                                {
                                    name: 'Income',
                                    type: 'bar',
                                    valueField: 'income',
                                    argumentField: 'month',
                                    color: '#9999cc'
                                }, {
                                    name: 'Spendings',
                                    type: 'bar',
                                    valueField: 'spendings',
                                    argumentField: 'month',
                                    color: '#ff9999'
                                }
                            ]
                        });
                    });
                }

                function loadBudgetChart() {
                    $.getJSON('@Url.Action("BudgetChart")?month=@currentMonth.ToString("yyyy-MM")', function (data) {
                        var max = 100;
                        $.each(data, function (i, val) {
                            if (val.percentage >= 100) {
                                max = null;
                                return;
                            }
                        });


                        $('#budgetChart').dxChart({
                            title: {
                                text: 'Budgets',
                                font: {
                                    size: '1.25em'
                                }
                            },
                            dataSource: data,
                            legend: {
                                visible: false
                            },
                            customizePoint: function () {
                                if (this.value > 100) {
                                    return {
                                        color: '#ff9999'
                                    };
                                }
                                return {
                                    color: '#99cc99'
                                };
                            },
                            tooltip: {
                                enabled: true,
                                argumentFormat: 'currency',
                                customizeText: function () {
                                    return this.argumentText + ": " + this.valueText + " %";
                                }
                            },
                            valueAxis: {
                                visible: false,
                                grid: {
                                    visible: false
                                },
                                max: max,
                                label: {
                                    visible: false
                                },
                                constantLines: [
                                    {
                                        label: {
                                            text: 'Limit'
                                        },
                                        width: 2,
                                        value: 100,
                                        color: '#000000',
                                        dashStyle: 'dash'
                                    }
                                ]
                            },
                            series: [
                                {
                                    type: 'bar',
                                    valueField: 'percentage',
                                    argumentField: 'category'
                                }
                            ]
                        });
                    });
                }

                window.reloadCallback = function () {
                    loadBudgetChart();
                    loadBalanceChart();
                    loadSpendingsChart();
                };

                window.reloadCallback();
            });
        </script>
    }
}
else
{
    @Html.Partial("_NoLinesWarning")
}
