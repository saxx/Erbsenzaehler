@using Erbsenzaehler.ViewModels.Reports
@using Newtonsoft.Json
@model Erbsenzaehler.ViewModels.Reports.AmountsViewModel
@if (Model.AmountPerMonth.Any())
{
    <h2>Report: Monthly per category</h2>

    <div id="categoriesContainer"></div>

    <div id="chartContainer" style="max-width: 100%; height: 600px;"></div>
    <p>
        &nbsp;
    </p>

@section scripts
{
    <script>
        var json = @Html.Raw(JsonConvert.SerializeObject(Model.AmountPerMonth));

        var categoriesContainer = $("#categoriesContainer");

        function printChart(category) {
            $.each(categoriesContainer.find("a"), function(i, val) {
                var button = $(val);
                button.removeClass("active");

                if (button.text() === category) {
                    button.addClass("active");
                }
            });

            var amounts = new Array();
            $.each(json[category], function(propertyName, propertyValue) {
                amounts.push({
                    name: propertyName,
                    value: (category === "@AmountsViewModel.IncomeCategory") ? propertyValue : -propertyValue
                });
            });

            $('#chartContainer').dxChart({
                dataSource: amounts,
                tooltip: {
                    enabled: true,
                    argumentFormat: 'currency',
                    customizeText: function() {
                        return this.argumentText + ": " + this.valueText + " €";
                    }
                },
                commonSeriesSettings: {
                    type: 'splineArea',
                    argumentField: 'name'
                },
                legend: {
                    visible: false
                },
                series: [
                    {
                        valueField: 'value',
                        point: { visible: true }
                    }
                ]
            });
        }

        $(function() {
            $.each(json, function(propertyName, propertyValue) {
                categoriesContainer.append($("<a />")
                    .html(propertyName)
                    .addClass("btn")
                    .addClass("btn-default")
                    .click(function() {
                        printChart(propertyName);
                    }));
                categoriesContainer.append(" ");
            });

            categoriesContainer.find("a")[0].click();
        });
    </script>
}}
else
{
    <div class="alert alert-warning">
        You don't have anything to display here yet. You probably want to @Html.ActionLink("import your data", "Index", "Import", null, new { @class = "alert-link" }) first.
    </div>
}